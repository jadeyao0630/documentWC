{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\grDocuments\\\\client\\\\src\\\\components\\\\MTable\\\\MTable.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDBload } from \"../../utils/DBLoader/DBLoaderContext\";\n// import classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverIp = '192.168.6.213';\nconst serverPort = '4555';\nconst MTable = props => {\n  _s();\n  const {\n    className\n  } = props;\n  const {\n    result\n  } = useDBload();\n  console.log(\"result\", result);\n  if (result === undefined || result.length === 0) return null;\n  const fetchImageURLs = async item => {\n    const urls = await new Promise(async (resolve, reject) => {\n      const response = await fetch('http://' + serverIp + ':' + serverPort + '/preview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fileName: item['封面页'],\n          folder: item[\"编号\"]\n        })\n      });\n      resolve(response.json());\n    });\n    console.log(urls);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  };\n  const headers = Object.keys(result[0]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), result === null || result === void 0 ? void 0 : result.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: headers.map((key, subIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: key === \"封面页\" ? fetchImageURLs(item) : item[key]\n      }, subIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(MTable, \"4LikoA/7o1XZGnM/HY0WSm0q2dI=\", false, function () {\n  return [useDBload];\n});\n_c = MTable;\nexport default MTable;\nvar _c;\n$RefreshReg$(_c, \"MTable\");","map":{"version":3,"names":["React","useDBload","jsxDEV","_jsxDEV","serverIp","serverPort","MTable","props","_s","className","result","console","log","undefined","length","fetchImageURLs","item","urls","Promise","resolve","reject","response","fetch","method","headers","body","JSON","stringify","fileName","folder","json","src","_jsxFileName","lineNumber","columnNumber","Object","keys","children","map","index","key","subIndex","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/grDocuments/client/src/components/MTable/MTable.tsx"],"sourcesContent":["import React, { FC,useState, useEffect } from \"react\";\r\nimport { useDBload } from \"../../utils/DBLoader/DBLoaderContext\";\r\n// import classNames from \"classnames\";\r\n\r\nexport interface ImTableProps {\r\n    className?: string;\r\n}\r\ninterface Iobject {\r\n    [key: string]: any;\r\n}\r\ninterface ImageItem {\r\n    id: string;\r\n    fileName: string; // 假设每行数据中有一个fileName字段\r\n  }\r\nconst serverIp='192.168.6.213'\r\nconst serverPort = '4555'\r\nconst MTable: FC<ImTableProps> = (props) => {\r\n    const { className } = props;\r\n    const { result } = useDBload();\r\n    console.log(\"result\",result)\r\n    if(result===undefined || result.length===0) return null\r\n\r\n    const fetchImageURLs = async (item:Iobject) => {\r\n        const urls = await new Promise(async(resolve, reject) => {\r\n            const response = await fetch('http://'+serverIp+':'+serverPort+'/preview', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ fileName: item['封面页'], folder: item[\"编号\"]}),\r\n              });\r\n              resolve(response.json());\r\n        });\r\n        console.log(urls)\r\n        return <img src=\"test\"></img>\r\n\r\n    };\r\n\r\n    const headers = Object.keys(result[0])\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    {headers.map((item, index) => (\r\n                        <th key={index}>{item}</th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            \r\n            {result?.map((item:Iobject, index) => (\r\n                <tr key={index}>\r\n                    {headers.map((key, subIndex) => (\r\n                        <td key={subIndex}>{key===\"封面页\"?fetchImageURLs(item):item[key]}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default MTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}