{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\grDocuments\\\\client\\\\src\\\\components\\\\MTable\\\\MTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDBload } from \"../../utils/DBLoader/DBLoaderContext\";\n// import classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverIp = '192.168.6.213';\nconst serverPort = '4555';\nconst MTable = props => {\n  _s();\n  const {\n    className\n  } = props;\n  const {\n    result\n  } = useDBload();\n  console.log(\"result\", result);\n  const [imageURLs, setImageURLs] = useState({});\n  const [hoveredImage, setHoveredImage] = useState(null);\n  const [popupPosition, setPopupPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  useEffect(() => {\n    if (result && result.length > 0) {\n      const fetchImageURLs = async () => {\n        const urls = {};\n        for (const item of result) {\n          const url = await fetch(`http://${serverIp}:${serverPort}/preview?folder=${item[\"编号\"]}&fileName=thumb_${item[\"封面页\"]}`, {\n            method: 'get',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(response => response.url);\n          urls[item[\"编号\"]] = url;\n          urls[item[\"编号\"] + \"_thumb\"] = url.replace(\"thumb_\", \"\");\n        }\n        setImageURLs(urls);\n      };\n      fetchImageURLs();\n    }\n  }, [result]);\n  if (result === undefined || result.length === 0) return null;\n  const handleMouseEnter = (url, event) => {\n    setHoveredImage(url);\n    setPopupPosition({\n      top: event.clientY + 10,\n      left: event.clientX + 10\n    });\n  };\n  const handleMouseLeave = () => {\n    setHoveredImage(null);\n  };\n  const headers = Object.keys(result[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), result === null || result === void 0 ? void 0 : result.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map((key, subIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: key === \"封面页\" ? {\n            padding: 0\n          } : {},\n          children: key === \"封面页\" ? imageURLs[item[\"编号\"]] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageURLs[item[\"编号\"]],\n            alt: \"\\u5C01\\u9762\\u9875\",\n            onClick: e => handleMouseEnter(imageURLs[item[\"编号\"] + \"_thumb\"], e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 59\n          }, this) : 'Loading...' : item[key]\n        }, subIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), hoveredImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        top: popupPosition.top,\n        left: popupPosition.left\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: hoveredImage,\n        alt: \"Large preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MTable, \"pBi44LY/ld2lUKM9XQqpkrbJT+I=\", false, function () {\n  return [useDBload];\n});\n_c = MTable;\nexport default MTable;\nvar _c;\n$RefreshReg$(_c, \"MTable\");","map":{"version":3,"names":["React","useState","useEffect","useDBload","jsxDEV","_jsxDEV","serverIp","serverPort","MTable","props","_s","className","result","console","log","imageURLs","setImageURLs","hoveredImage","setHoveredImage","popupPosition","setPopupPosition","top","left","length","fetchImageURLs","urls","item","url","fetch","method","headers","then","response","replace","undefined","handleMouseEnter","event","clientY","clientX","handleMouseLeave","Object","keys","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","key","subIndex","style","padding","src","alt","onClick","e","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/grDocuments/client/src/components/MTable/MTable.tsx"],"sourcesContent":["import React, { FC,useState, useEffect } from \"react\";\r\nimport { useDBload } from \"../../utils/DBLoader/DBLoaderContext\";\r\n// import classNames from \"classnames\";\r\n\r\nexport interface ImTableProps {\r\n    className?: string;\r\n}\r\ninterface Iobject {\r\n    [key: string]: any;\r\n}\r\ninterface ImageItem {\r\n    id: string;\r\n    fileName: string; // 假设每行数据中有一个fileName字段\r\n  }\r\nconst serverIp='192.168.6.213'\r\nconst serverPort = '4555'\r\nconst MTable: FC<ImTableProps> = (props) => {\r\n    const { className } = props;\r\n    const { result } = useDBload();\r\n    console.log(\"result\",result)\r\n    const [imageURLs, setImageURLs] = useState<{ [key: string]: string }>({});\r\n    const [hoveredImage, setHoveredImage] = useState<string | null>(null);\r\n    const [popupPosition, setPopupPosition] = useState<{ top: number, left: number }>({ top: 0, left: 0 });\r\n\r\n    useEffect(() => {\r\n        if (result && result.length > 0) {\r\n            const fetchImageURLs = async () => {\r\n                const urls: { [key: string]: string } = {};\r\n                for (const item of result as Iobject[]) {\r\n                    const url = await fetch(`http://${serverIp}:${serverPort}/preview?folder=${item[\"编号\"]}&fileName=thumb_${item[\"封面页\"]}`, {\r\n                        method: 'get',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        }\r\n                    }).then(response => response.url);\r\n                    urls[item[\"编号\"]] = url;\r\n                    urls[item[\"编号\"]+\"_thumb\"] = url.replace(\"thumb_\",\"\");\r\n                }\r\n                setImageURLs(urls);\r\n            };\r\n            fetchImageURLs();\r\n        }\r\n    }, [result]);\r\n    if(result===undefined || result.length===0) return null\r\n    const handleMouseEnter = (url: string,event:React.MouseEvent) => {\r\n        setHoveredImage(url);\r\n        setPopupPosition({ top: event.clientY + 10, left: event.clientX + 10 });\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoveredImage(null);\r\n    };\r\n\r\n    const headers = Object.keys(result[0])\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {headers.map((item, index) => (\r\n                            <th key={index}>{item}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                \r\n                {result?.map((item:Iobject, index) => (\r\n                    <tr key={index}>\r\n                        {headers.map((key, subIndex) => (\r\n                            <td key={subIndex} style={key === \"封面页\" ?{ padding:0 }:{}}>{key === \"封面页\"\r\n                                ? imageURLs[item[\"编号\"]] ? <img src={imageURLs[item[\"编号\"]]} alt=\"封面页\" onClick={(e) => handleMouseEnter(imageURLs[item[\"编号\"]+\"_thumb\"],e)} /> : 'Loading...'\r\n                                : item[key]}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n            {hoveredImage && (\r\n                <div className=\"popup\" style={{ top: popupPosition.top, left: popupPosition.left }}>\r\n                    <img src={hoveredImage} alt=\"Large preview\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default MTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}